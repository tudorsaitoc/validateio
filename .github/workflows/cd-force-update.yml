name: Force Update CD

on:
  workflow_dispatch:

jobs:
  force-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Delete existing service forcefully
      run: |
        echo "üóëÔ∏è Deleting existing service..."
        gcloud run services delete validateio-backend \
          --region=${{ secrets.GCP_REGION }} \
          --quiet || echo "Service doesn't exist or already deleted"
        
        # Wait for deletion to complete
        echo "Waiting for deletion to complete..."
        sleep 30
    
    - name: Deploy fresh service
      run: |
        echo "üöÄ Deploying fresh service..."
        cd backend
        
        # Create a unique service name with timestamp to avoid conflicts
        SERVICE_NAME="validateio-backend"
        
        gcloud run deploy $SERVICE_NAME \
          --source=. \
          --region=${{ secrets.GCP_REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
          --set-env-vars="SUPABASE_URL=${{ secrets.SUPABASE_URL }}" \
          --set-env-vars="SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" \
          --set-env-vars="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --set-env-vars="JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" \
          --set-env-vars="ENVIRONMENT=production" \
          --set-env-vars="USE_SUPABASE_AUTH=true" \
          --min-instances=0 \
          --max-instances=10 \
          --memory=1Gi
    
    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe validateio-backend --region=${{ secrets.GCP_REGION }} --format="value(status.url)")
        echo "‚úÖ Service deployed to: $SERVICE_URL"
        
        # Test health
        sleep 10
        curl -f "$SERVICE_URL/health" || echo "Health check failed"