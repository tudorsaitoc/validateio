name: Manual CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
    
    - name: Check if service exists
      id: check_service
      run: |
        if gcloud run services describe validateio-backend --region=${{ secrets.GCP_REGION }} --format="value(name)" 2>/dev/null; then
          echo "SERVICE_EXISTS=true" >> $GITHUB_OUTPUT
          echo "âœ… Service exists, will update it"
        else
          echo "SERVICE_EXISTS=false" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Service doesn't exist, will create it"
        fi
    
    - name: Build and push Docker image
      run: |
        cd backend
        
        # Build the image
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/validateio-backend:${{ github.sha }} .
        
        # Push to Artifact Registry
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/validateio-backend:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy validateio-backend \
          --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/validateio-backend:${{ github.sha }} \
          --region=${{ secrets.GCP_REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
          --set-env-vars="SUPABASE_URL=${{ secrets.SUPABASE_URL }}" \
          --set-env-vars="SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" \
          --set-env-vars="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --set-env-vars="JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" \
          --set-env-vars="ENVIRONMENT=production" \
          --min-instances=0 \
          --max-instances=10 \
          --timeout=300 \
          --memory=1Gi
    
    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe validateio-backend --region=${{ secrets.GCP_REGION }} --format="value(status.url)")
        echo "ðŸš€ Service deployed to: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
    
    - name: Test deployment
      run: |
        echo "Testing health endpoint..."
        curl -f "${{ env.SERVICE_URL }}/health" || exit 1
        echo "âœ… Health check passed!"