name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: validateio-backend
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Run tests
      working-directory: ./backend
      env:
        ENVIRONMENT: test
      run: |
        pytest tests/ -v || echo "No tests found, continuing..."

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      working-directory: ./backend
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --set-env-vars "ENVIRONMENT=production" \
          --set-env-vars "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" \
          --set-env-vars "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" \
          --set-env-vars "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" \
          --set-env-vars "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --set-env-vars "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" \
          --set-env-vars "SERPER_API_KEY=${{ secrets.SERPER_API_KEY }}" \
          --set-env-vars "LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }}" \
          --set-env-vars "LANGCHAIN_TRACING_V2=${{ secrets.LANGCHAIN_TRACING_V2 }}" \
          --set-env-vars "LANGCHAIN_PROJECT=${{ secrets.LANGCHAIN_PROJECT }}" \
          --set-env-vars "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          --set-env-vars "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" \
          --min-instances 0 \
          --max-instances 10 \
          --memory 1Gi

    - name: Get service URL
      run: |
        echo "Backend deployed to:"
        gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)'